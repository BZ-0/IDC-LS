@use "@unite/scss/core/ClassMods" as cm;
@use "@unite/scss/core/Utils" as u;
@use "@unite/scss/core/Detector" as d;

//
@use "@unite/scss/design/ColorTheme" as tm;


//
$tabNames: "wallpapers", "settings";
@function TabSelect($tabNames) {
    $selector: ".ui-tab-item.__current";
    @each $name in $tabNames {
        $selector: $selector + ", &[data-current-page=\"#{$name}\"] .ui-tab-item[data-page=\"#{$name}\"]";
    }
    @return $selector;
}


//
@layer ui-control-center {
    //
    #control-center {
        @include cm.contain-size;

        //
        display: grid;
        grid-template-columns: 0px minmax(0px, 1fr);
        grid-template-rows: minmax(0px, 1fr);
        container-name: ui-settings;
        container-type: size;
        position: relative;
        overflow: hidden;

        //
        #{TabSelect($tabNames)} {
            @include tm.ux-inverse;
        }

        //
        .ui-screen {
            @include cm.stretch;
            @include tm.ux-solid;

            //
            grid-column: 2 / 2 span;
            grid-row: 1 / 1 span;
            display: grid;

            //
            grid-template-columns: minmax(0px, 1fr);
            grid-template-rows: minmax(0px, 2.5rem);

            //
            .ui-space {
                @include cm.stretch;
                grid-row: 2 / 2 span;
            }

            //
            .ui-nav {
                @include cm.stretch;

                //
                display: flex;
                flex-direction: row;
                grid-row: 1 / 1 span;

                //
                place-items: center;
                place-content: center start;

                //
                .f-space {
                    @include cm.stretch;

                    //
                    flex-grow: 1;
                }

                //
                button {
                    @include cm.no-wrap;

                    //
                    place-items: center;
                    place-content: center;

                    //
                    box-sizing: border-box;
                    padding-inline: 1rem;
                    padding-block: 0.5rem;

                    //
                    inline-size: max-content;
                    block-size: stretch;

                    min-block-size: max-content;
                    max-block-size: 3rem;

                    gap: 0.4rem;

                    //
                    font-size: clamp(0.5rem, 2cqi, 0.8rem);

                    //
                    & * {
                        @include cm.align-center;
                        background-color: transparent;
                        max-inline-size: 100%;
                        max-block-size: 100%;
                        block-size: 100%;
                    }
                }
            }
        }

        //
        .ui-panel {
            display: flex;
            flex-direction: column;
            grid-column: 1 / 1 span;

            //
            inline-size: min(16rem, 100cqi);
            block-size: 100%;

            //
            max-inline-size: none;
            max-block-size: 100%;

            //
            z-index: 9;
            box-shadow: 0px 0px 1rem rgb(from #000000 r g b / 0.2);

            //
            padding: 0px;
            gap: 0px;

            //
            .ui-tab-item {
                --decor-size: 4rem;

                ///
                grid-column: 1 / 3 span;
                grid-row: auto;
            }

            //
            @media #{d.$isMobile} {
                inline-size: 100cqi;
            }
        }
    }
}
