@use "@unite/scss/core/CMixins" as cm;
@use "@unite/scss/grid/GridLayout";

//
@use "@unite/scss/design/Shape" as s;

//
@layer ui-grid {

    //
    *[data-shape="wavy"] .ux-grid-item, .ux-grid-item[data-shape="wavy"] {
        --clip-amplitude: 0.06;
        --clip-freq: 8;
        --clip-path: #{s.Integrate("WavyFx", 100)};
        --corrector: 1.1;
        clip-path: var(--clip-path);
        border-radius: calc(var(--icon-size, 100%) * 0.5);
    }

    //
    *[data-shape="circle"] .ux-grid-item, .ux-grid-item[data-shape="circle"] {
        border-radius: calc(var(--icon-size, 100%) * 0.5);
    }

    //
    *[data-shape="tear"] .ux-grid-item, .ux-grid-item[data-shape="tear"] {
        border-radius: calc(var(--icon-size, 100%) * 0.5);
        border-end-end-radius: calc(var(--icon-size, 100%) * 0.125);
    }

    //
    *[data-shape="square"] .ux-grid-item, .ux-grid-item[data-shape="square"] {
        border-radius: calc(var(--icon-size, 100%) * 0.25);
    }

    //
    .ui-grid-pages,
    .ui-desktop-grid {
        inline-size: 100%;
        block-size: 100%;

        //
        pointer-events: auto;

        //
        --padding-h: 1rem;
        --padding-v: 1.5rem;

        //
        overflow: visible;
        contain: content;

        //
        padding-inline: var(--padding-h);
        padding-block: var(--padding-v);

        //
        @media (orientation: portrait) {
            padding-inline: var(--padding-h);
            padding-block: var(--padding-v);
        }

        //
        @media (orientation: landscape) {
            padding-inline: var(--padding-v);
            padding-block: var(--padding-h);
        }
    }

    //
    .ui-grid-page {
        filter: drop-shadow(0px 0px 0.25rem #00000060);
        pointer-events: none;

        //
        --c-gap: calc(4dvmin / var(--zoom, 1));
        --r-gap: calc(4dvmin / var(--zoom, 1));

        //
        .ux-grid-item {
            will-change:
                --rx, --ry,
                --drag-x,
                --drag-y,
                --resize-x,
                --resize-y,
                --translate-x,
                --translate-y;

            //
            display: flex;
            padding: calc(var(--icon-size) * 0.265 * var(--corrector));
            --scale: var(--corrector, 1);
            //clip-path: var(--clip-path);
            //border-radius: calc(var(--icon-size) * 0.5);

            //
            inline-size: var(--icon-size);
            block-size: var(--icon-size);

            // override by animations...
            --translate-x: calc(var(--drag-x, 0) * var(--zpx, 1px));
            --translate-y: calc(var(--drag-y, 0) * var(--zpx, 1px));

            //
            &:where([data-type="backup"]) {
                pointer-events: none;

                // override by animations...
                --grid-column: var(--fp-cell-x);
                --grid-row: var(--fp-cell-y);
            }

            //
            &:where([data-type="items"]) {
                pointer-events: auto;
                cursor: pointer;
            }
        }
    }
}
