@use "@unite/scss/core/ClassMods" as cm;

//
@layer ux-editor {
    //
    .ux-editor {
        @include cm.pe-none;

        //
        display: grid;
        position: fixed;
        overflow: hidden;

        //
        inset: 0px !important;
        inset-block-start: 0px;
        //inset-block-end: auto;
        inset-block-end: var(--keyboard-inset-bottom, auto);

        //
        z-index: 999999;

        //
        inline-size: var(--vp-i-size, 100dvi) !important;
        //block-size: var(--vp-b-size, 100dvb) !important;
        block-size: calc(var(--vp-b-size, 100dvb) - var(--keyboard-inset-height, 0px)) !important;

        //
        will-change: --keyboard-inset-bottom, --keyboard-inset-height, contents, inset;

        //
        grid-template-columns: minmax(0px, 1fr);
        grid-template-rows: [empty-space] minmax(0px, 1fr) [field-edit] minmax(3rem, max-content);

        //
        @include cm.vp-vars-keyboard-dependent;

        //
        .field-content {
            //@include cm.pe-enable;

            //
            pointer-events: auto !important;

            //
            display: grid;
            box-shadow: 0px 0px 1rem 1px #00000070;

            //
            grid-template-columns: minmax(0px, 1fr) minmax(3rem, max-content) minmax(3rem, max-content);

            //
            max-block-size: none;
            min-block-size: max-content;

            //
            :where(.field-copy, .field-paste) {
                @include cm.stretch;
                @include cm.align-center;

                //
                display: flex;
                padding: 1rem !important;

                //
                border-radius: 0px;

                //
                cursor: pointer;
            }

            //
            .field-wrap {
                @include cm.stretch;

                //
                //display: flex;
                display: contents;
                flex-direction: row;
                min-block-size: 3rem;

                //
                input {
                    @include cm.stretch;
                    //@include cm.pe-enable;

                    //
                    pointer-events: auto !important;

                    //
                    font-size: 1.6rem;

                    //@include dFont.applyFont(1.8rem);

                    //
                    padding-inline: 1rem;
                    min-block-size: 3rem;

                    //
                    user-select: auto;
                }
            }
        }
    }
}
