@use "../color/colorvars" as cl;
@use "../color/colorutils" as cu;

//
@layer ls-colors {
    :root, :host, :scope, :where(*) {
        --theme-chroma-mod: oklch(from #{cl.$baseColor} l 0.99 h);
        --theme-black-mod: oklch(from #{cl.$baseColor} 0.01 0.01 h);
        --theme-white-mod: oklch(from #{cl.$baseColor} 0.99 0.01 h);

        //
        --theme-dark-down-mod: color-mix(in oklch, var(--theme-black-mod) 98%, #{cl.$baseColor});
        --theme-dark-up-mod: color-mix(in oklch, var(--theme-white-mod) 90%, #{cl.$baseColor});

        //
        --theme-light-down-mod: color-mix(in oklch, var(--theme-white-mod) 98%, #{cl.$baseColor});
        --theme-light-up-mod: color-mix(in oklch, var(--theme-black-mod) 90%, #{cl.$baseColor});
    }
    
    //
    :root, :host, :scope, :where(body) {
        //
        @include cu.var-dependent();
        
        //
        @supports(color: light-dark(white, black)) {
            @include cu.scheme-dependent;
        }
        
        //
        --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};
    }
    
    :root, :where(body) {
        --theme-is-dark: 0; color-scheme: light;
        @media (prefers-color-scheme: light) { --theme-is-dark: 0; color-scheme: light; }
        @media (prefers-color-scheme: dark)  { --theme-is-dark: 1; color-scheme: dark; }
    }

    //
    :where(.themed, .solid, .accent, .transparent, *) {
        --highlight-transition-duration: 0.2s;
        --highlight-transition-mode: linear;
        --highlight-transition-property: --highlight-coefficient;
        transition: var(--highlight-transition-property) var(--highlight-transition-duration) var(--highlight-transition-mode);
    }

    // default
    .themed {
        --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};

        //
        & > :where(.icon-wrap) {
            --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
            --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 80%)};

            //
            background-color: var(--theme-surface-color);
        }
    }

    // 
    .solid {
        --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};
        
        //
        & > :where(.icon-wrap) {
            background-color: transparent;
        }
    }
    
    // 
    .inverse {
        --theme-glyph-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        
        //
        & > :where(.icon-wrap) {
            background-color: transparent;
        }
    }
    

    // 
    .accent {
        --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 80%)};
        
        //
        & > :where(.icon-wrap) {
            background-color: transparent;
        }
    }

    // 
    .transparent {
        --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
        --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};
        background-color: transparent;
    }

    //
    .apply-color-theme {
        background-color: var(--current-surface-color);
        color: var(--current-glyph-color);
    }

    //
    :where(.hl-1, .hl-1h, .hl-2, .hl-2h, .hl-3h, .hl-ns) {
        background-color: var(--current-surface-color);
    }

    //
    .hl-1h:hover { --highlight-coefficient: 5; }
    .hl-2h:hover { --highlight-coefficient: 10; }
    .hl-3h:hover { --highlight-coefficient: 15; }
    .hl-1 { --highlight-coefficient: 5; }
    .hl-2 { --highlight-coefficient: 10; }; 
    .hl-ns { --highlight-coefficient: 4; }

    //
    .force-light { --theme-is-dark: 0; color-scheme: light; }
    .force-dark { --theme-is-dark: 1; color-scheme: dark; }

}