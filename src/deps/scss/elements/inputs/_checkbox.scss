
@use "@scss/core/classlets";
@use "@scss/fonts/xo_caliburn" as dFont;
@use "@scss/core/themed";

//
@layer ls-inputs {
    :where(.ls-checkbox) {
        @extend .align-center;
        @extend .stretch;
    
        //
        container-type: size;
        contain: none;

        //
        overflow: visible;

        //
        display: flex;
        position: relative;
        border-radius: 1.5rem;

        //
        box-sizing: border-box;
        min-block-size: max-content;
        min-inline-size: max-content;
        block-size: 2rem;
        inline-size: 3.5rem;
        max-block-size: 2.5rem;
        max-inline-size: none;
        aspect-ratio: 1 / 1;

        //
        background-color: var(--current-surface-color);
        accent-color: var(--current-glyph-color);
        color: var(--current-glyph-color);
        
        //
        pointer-events: auto;
        pointer-events: bounding-bpx;
        
        //
        --thumb-size: 1.5rem;
        --space-size: 2rem;
        
        //
        .icon-sign {
            @extend .align-center;
            
            
            display: flex;
            pointer-events: none;
            
            //
            translate: calc(calc(var(--space-size) * 0.5) + calc(100cqi - var(--space-size)) * var(--value-mod) - 50%) calc(50cqb - 50%);
            transition: translate 100ms linear;
            
            //
            pointer-events: none;
            position: absolute;
            inset: 0px;
            //opacity: 0;
            padding: 0.25rem;
            border-radius: calc(var(--thumb-size) * 0.45);
            
            //
            inline-size: var(--thumb-size);
            block-size: var(--thumb-size);
            max-inline-size: var(--thumb-size);
            max-block-size: var(--thumb-size);
            
            //
            & > * {
                @extend .stretch;
                stroke-width: 0.25rem;
                position: relative;
                inset: 0px;
                translate: 0px 0px;
                stroke: var(--current-glyph-color);
            }
            
            
        }
        
        //
        &:has(input:not(checked)) {
            @extend .solid;
            --value-mod: 0;
            
            //
            .icon-sign > .done {
                display: none;
            }
            
            //
            .icon-sign > .circle {
                display: flex;
            }
            
            .icon-sign, .icon-sign > * {
                @extend .inverse;
                stroke: var(--current-glyph-color);
            }
        }
        
        //
        &:has(input:checked) {
            @extend .inverse;
            --value-mod: 1;
            
            //
            .icon-sign > .done {
                display: flex;
            }
            
            //
            .icon-sign > .circle {
                display: none;
            }
            
            .icon-sign, .icon-sign > * {
                @extend .solid;
                stroke: var(--current-glyph-color);
            }
        }

        //
        input {
            @extend .stretch;
            
            //
            position: absolute;
            inset: 0px;
            opacity: 0;
            padding: 0px;
            cursor: pointer;
            
            //
            pointer-events: auto;
            pointer-events: bounding-bpx;
        }
    }

}