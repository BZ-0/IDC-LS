@use "@scss/core/classlets";
@use "@scss/color/colorutils" as cu;
@use "@scss/color/colorvars" as cl;
@use "@scss/core/utils" as u;

//
@use "./gridmisc.scss" as gm;

//
@layer ls-icon-grid {

    //
    .ls-grid-mp {
        --padding-inline: 1rem;
        --padding-block: 2rem;

        //
        padding-inline: var(--padding-inline);
        padding-block: var(--padding-block);

        //
        @media (orientation: landscape) {
            padding-inline: var(--padding-block);
            padding-block: var(--padding-inline);
        }

        //
        @media (orientation: portrait) {
            padding-inline: var(--padding-inline);
            padding-block: var(--padding-block);
        }
    }

    //
    .icon-grid {
        @extend .pe-none;
        
        //
        display: grid;
        touch-action: none !important; 
        position: relative;

        //
        inline-size: 100cqi;
        block-size: 100cqb;

        //
        grid-template-columns: repeat(var(--columns), minmax(0px, 1fr));
        grid-template-rows: repeat(var(--rows), minmax(0px, 1fr));

        //
        --c-gap: 1;
        --r-gap: 1;

        //
        padding-inline: calc(var(--c-gap) * 0.5rem);
        padding-block : calc(var(--r-gap) * 0.5rem);

        //
        column-gap: calc(var(--c-gap) * 1rem);
        row-gap: calc(var(--r-gap) * 1rem);
        
        //
        overflow: visible;
        
        //
        background-color: transparent;
        background-image: none;
        
        //
        align-items: start;
        align-content: start;
        align-self: start;
    }

    //
    .icon-placement {
        filter: drop-shadow(0px 0px 0.125rem #000000E0);
    
        //
        @include gm.calculateMetric();
        @extend .align-center;
        @extend .no-contain;
        @extend .stretch;

        //
        touch-action: none !important; 
        overflow: visible;
        
        //
        min-inline-size: max-content;
        min-block-size: max-content;

        //
        grid-column: auto;
        grid-column: var(--fc-cell-x);

        //
        grid-row: auto;
        grid-row: var(--fc-cell-y);

        //
        will-change: --translate-x, --translate-y;
        --translate-x: calc(var(--drag-x) * 1px);
        --translate-y: calc(var(--drag-y) * 1px);

        //
        display: flex;
        
        //
        background-color: transparent;
    }

    //
    .grid-item-label {
        @extend .align-center;
        @extend .no-wrap;
        
        //
        display: flex;
    
        //
        background-color: transparent;
        touch-action: none !important; 
    
        //
        overflow: visible;
        
        //
        & > span {
            @include cu.var-dependent(var(--theme-wallpaper-is-dark));
        
            //
            @extend .no-wrap;
        
            //
            background-color: transparent;
            touch-action: none !important; 
            
            display: inline-grid;
            transform: rotate(calc(0deg - var(--pfrot, 0deg))) translate(0, 2.5rem);
            writing-mode: horizontal-tb;
            
            //
            --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
            --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};
            
            //
            color: var(--current-surface-color);
        }
    }

    //.icon-label {
        //filter: drop-shadow(0px 0px 0.125rem #000000A0)
    //}

    //
    .icon-item {
        @extend .stretch;
    
        //
        overflow: visible;
        background-color: transparent;
        touch-action: none !important; 

        //
        min-inline-size: max-content;
        min-block-size: max-content;

        //
        container-type: size;
        contain: none;

        //
        & .icon-design {
            @extend .pe-enable;
            @extend .align-center;
            @include cu.var-dependent(var(--theme-wallpaper-is-dark));
            @include u.clamped-width(max-content, var(--icon-size), var(--icon-size));
            @include u.clamped-height(max-content, var(--icon-size), var(--icon-size));
            
            //
            --icon-size: 4rem;
            --icon-size: min(100cqmin, 4rem);

            //
            clip-path: var(--clip-path);
            cursor: grab;
            padding: calc(var(--icon-size) * 0.3);

            //
            aspect-ratio: 1 / 1;
            
            //
            --theme-glyph-color: #{cu.theme-mod-down(cl.$baseColor, 90%)};
            --theme-surface-color: #{cu.theme-mod-up(cl.$baseColor, 90%)};

            //
            color: var(--current-glyph-color);
            background-color: var(--current-surface-color);
            
            //
            border-radius: calc(var(--icon-size) * 0.5);
            touch-action: none !important; 

            //
            will-change: translate, transform, --translate-x, --translate-y;
            transform: rotate(calc(0deg - var(--pfrot, 0deg))) translate(var(--translate-x), var(--translate-y));
    
            //
            display: flex;
        }
    }

    //
    .icon-grid[data-type="bucket"] {
        .icon-placement {
            //
            grid-column: auto;
            grid-column: var(--fp-cell-x);

            //
            grid-row: auto;
            grid-row: var(--fp-cell-y);
            
            //
            touch-action: none !important; 
        }
    }

}
